name: Prepare Build

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true

    outputs:
      flavor:
        description: "Build Flavor"
        value: ${{ jobs.flavor.outputs.output1 }}
      number:
        description: "Build Number"
        value: ${{ jobs.number.outputs.output1 }}

jobs:
  flavor:
    name: Flavor
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.output.outputs.flavor }}
    steps:
      - name: Run Script
        id: script
        uses: actions/github-script@v6
        env:
          FLAVOR: ${{ inputs.ref }}
        with:
          result-encoding: string
          script: |
            const ref = process.env.FLAVOR || "edge";
            switch (ref) {
              case "beta": return "beta";
              case "candidate": return "candidate";
              case "stable": return "stable";
              default: return "edge";
            }

      - name: Set Output
        id: output
        run: |
          echo ${{ steps.script.outputs.result }}
          echo "::set-output name=flavor::${{ steps.script.outputs.result }}"

      - name: Create Flavor Configuration
        working-directory: ${{ github.workspace }}
        run: |
          echo $'FLAVOR=${{ steps.script.outputs.result }}\nCOMMIT=${{ github.sha }}' > .flavor

      - name: Upload Flavor Configuration
        uses: actions/upload-artifact@v2
        with:
          name: flavor-${{ github.sha }}
          path: ${{ github.workspace }}/.flavor

  number:
    name: Number
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.output.outputs.number }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Count Commits
        id: commit_count
        run: |
          count=`git rev-list HEAD --count`
          echo "::set-output name=commit_count::$count"

      - name: Run Script
        id: script
        uses: actions/github-script@v6
        env:
          FLAVOR: ${{ inputs.ref }}
          COUNT: ${{ steps.commit_count.outputs.commit_count }}
        with:
          result-encoding: string
          script: |
            const count = process.env.COUNT || "0";
            const base = 1000000000;
            return base + Number(count);

      - name: Set Output
        id: output
        run: |
          echo ${{ steps.script.outputs.result }}
          echo "::set-output name=number::${{ steps.script.outputs.result }}"
